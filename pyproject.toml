[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "admitted"
description = "Utility to make automating processes using Selenium and Chromedriver easier"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [ { name = "Joe Carey", email = "joe@accountingdatasolutions.com" } ]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
urls = { "repository" = "https://github.com/Accounting-Data-Solutions/admitted" }
dynamic = ["version"]
dependencies = [
    "cssselect",
    "lxml",
    "psutil",
    "selenium",
    "urllib3[secure]",
]

[project.optional-dependencies]
dev = [
    "black",
    "coverage[toml]",
    "html2text",
    "pylint",
    "pytest",
    "pytest-cov",
    "toml",
    "lxml-stubs",
]

[tool.setuptools]
packages = ["admitted"]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
version = { file = "VERSION" }

[tool.black]
line-length = 120
target-version = ["py310", "py311"]

[tool.coverage.run]
source = ["admitted"]

[tool.coverage.report]
skip_empty = true

[tool.pytest.ini_options]
addopts = "--cov -ra -l --color=yes --code-highlight=yes"
testpaths = ["tests"]
python_files = "*.py"
log_auto_indent = "True"
log_cli = "True"
norecursedirs = ["__pycache__", "*.egg-info", ".*"]

[tool.pylint.'MAIN']
# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-allow-list = ["lxml"]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "bad-inline-option",
    "deprecated-pragma",
    "duplicate-code",
    "file-ignored",
    "fixme",
    "import-error",
    "invalid-name",
    "locally-disabled",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "raw-checker-failed",
    "suppressed-message",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "unspecified-encoding",
    "use-dict-literal",
    "use-list-literal",
]
enable = ["c-extension-no-member"]

[tool.pylint.'REPORTS']
# Available formats are text, parseable, colorized, json, and msvs (visual studio).
output-format = "colorized"
# Activate the evaluation score.
score = false

[tool.pylint.'FORMAT']
# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format = "LF"

# Maximum number of characters on a single line.
max-line-length = 120
